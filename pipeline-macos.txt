
node('Mac10.12.3') {
    stage('Clean') {
        if (params.BUILD_CLEAN) {
            cleanSetup()
        }
        if (params.DEEP_CLEAN) {
            cleanSetup()
            sh '''
            rm -rf opencmiss
            rm -rf setup-build
            '''
        }
    }
    stage('Update') {
        if (!params.BUILD_CLEAN) {
            updateSource()
        }
    }
    stage('Configure') {
        sh 'mkdir -p opencmiss'
        dir('./setup') {
            git branch: 'develop', url: 'https://github.com/OpenCMISS/setup.git'
        }
        dir('./setup-build') {
            if (params.BUILD_DEBUG) {
            sh '''
            cmake -DOPENCMISS_LIBRARIES=iron -DOPENCMISS_ROOT=../opencmiss -DOPENCMISS_CONFIG_BUILD_TYPE=Debug ../setup
            '''
            }
            else
            {
            sh '''
            cmake -DOPENCMISS_LIBRARIES=iron -DOPENCMISS_ROOT=../opencmiss -DOPENCMISS_CONFIG_BUILD_TYPE=Release ../setup
            '''
            }
        }
    }
    stage('Make') {
        dir('./setup-build') {         
            sh '''
        	make
            '''
        }
    }
    stage('Test') {
    if (params.BUILD_DEBUG) {
        dir('./opencmiss/build/manage/release/config/Debug') {
            sh '''
        	make keytests
            '''
        }
    }
    else
    {
        dir('./opencmiss/build/manage/release/config/Release') {
            sh '''
        	make keytests
            '''
        }
    }
    }
    stage('Package') {
    if (!params.BUILD_DEBUG) {
        dir('./opencmiss/build/manage/release/') {
            if (params.DO_RELEASE) {
                sh 'cmake -DOPENCMISS_RELEASE=ON .'
            } else {
                sh 'cmake -DOPENCMISS_RELEASE=OFF .'
            }
            sh 'make package_sdk'
        }
    }
    }
    stage('Archive') {
        dir('./opencmiss/build/manage/release/packaging/sdk/package/') {
            archiveArtifacts artifacts: 'OpenCMISS-Libraries*'
        }
    }
    stage('Finish') {
        echo "Finish"
    }
}
