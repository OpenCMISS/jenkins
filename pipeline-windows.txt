
node('Windows8') {
    stage('Clean') {
        if (params.BUILD_CLEAN) {
            cleanSetup()
        }
    }
    stage('Update') {
        updateSource()
    }
    stage('Configure') {
        bat 'if not exist opencmiss mkdir opencmiss'
        dir('./setup') {
            git branch: 'develop', url: 'https://github.com/OpenCMISS/setup.git'
        }
        dir('./setup-build') {
            bat '"C:\\Program Files\\CMake\\bin\\cmake.exe" -G"Visual Studio 14 2015 Win64" -DOPENCMISS_ROOT=../opencmiss ../setup'
        }
    }
    stage('Make') {
        dir('./setup-build') {
        	bat '"C:\\Program Files\\CMake\\bin\\cmake.exe" --build . --config Release'
        }
    }
    stage('Test') {
        dir('./opencmiss/build/manage/config/') {
            bat '"C:\\Program Files\\CMake\\bin\\cmake.exe" --build . --target keytests --config Release'
        }
    }
    stage('Package') {
        dir('./opencmiss/build/manage/') {
            bat '"C:\\Program Files\\CMake\\bin\\cmake.exe" --build . --target package_sdk --config Release'
        }
    }
    stage('Archive') {
        dir('./opencmiss/build/manage/packaging/sdk/package/') {
            archiveArtifacts artifacts: 'OpenCMISS-Libraries*'
        }
    }
    stage('Finish') {
        echo "Finish"
    }
}
